name: Release

on:
  push:
    branches:
      - master
    # Enable later: only allow semver-like tags
    # tags:        
    #   - v[0-9]+.[0-9]+.[0-9]+
jobs:

  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      BUILDFLAGS: -ldflags="-X github.com/bpicode/fritzctl/config.Version=${{ github.ref }} -X github.com/bpicode/fritzctl/config.Revision=${{ github.sha }}" -trimpath

    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      
    - name: Build for linux/amd64
      run: GOOS=linux GOARCH=amd64 go build -o ./build/distributions/fritzctl-linux-amd64 "${BUILDFLAGS}"

    - name: Build for linux/arm
      run: GOOS=linux GOARCH=arm go build -o ./build/distributions/fritzctl-linux-arm "${BUILDFLAGS}"

    - name: Build for dragonfly/amd64
      run: GOOS=dragonfly GOARCH=amd64 go build -o ./build/distributions/fritzctl-dragonfly-amd64 "${BUILDFLAGS}"

    - name: Build for freebsd/amd64
      run: GOOS=freebsd GOARCH=amd64 go build -o ./build/distributions/fritzctl-freebsd-amd64 "${BUILDFLAGS}"

    - name: Build for netbsd/amd64
      run: GOOS=netbsd GOARCH=amd64 go build -o ./build/distributions/fritzctl-netbsd-amd64 "${BUILDFLAGS}"

    - name: Build for openbsd/amd64
      run: GOOS=openbsd GOARCH=amd64 go build -o ./build/distributions/fritzctl-openbsd-amd64 "${BUILDFLAGS}"

    - name: Build for darwin/amd64
      run: GOOS=darwin GOARCH=amd64 go build -o ./build/distributions/fritzctl-darwin-amd64 "${BUILDFLAGS}"

    - name: Build for windows/amd64
      run: GOOS=windows GOARCH=amd64 go build -o ./build/distributions/fritzctl-windows-amd64 "${BUILDFLAGS}"

    - name: Checksums for binaries
      run: find ./build/distributions/ -type f  | xargs shasum -a 256
    
    - name: Compile package contents
      run: |
        mkdir -p ./build/packages/linux_amd64_deb/usr/bin ./build/packages/linux_amd64_deb/etc/bash_completion.d ./build/packages/linux_amd64_deb/usr/share/man/man1 ./build/packages/linux_amd64_deb/usr/share/doc/fritzctl
        cp ./build/distributions/fritzctl-linux-amd64 ./build/packages/linux_amd64_deb/usr/bin/fritzctl
        go run main.go completion bash > ./build/packages/linux_amd64_deb/etc/bash_completion.d/fritzctl
        go run main.go doc man | gzip --force  > ./build/packages/linux_amd64_deb/usr/share/man/man1/fritzctl.1.gz
        go run github.com/bpicode/fritzctl/tools/analice generate copyright github.com/bpicode/fritzctl --tests=false --gooses=linux,windows,darwin > ./build/packages/linux_amd64_deb/usr/share/doc/fritzctl/copyright

        mkdir -p ./build/packages/linux_arm_deb/usr/bin ./build/packages/linux_arm_deb/etc/bash_completion.d ./build/packages/linux_arm_deb/usr/share/man/man1 ./build/packages/linux_arm_deb/usr/share/doc/fritzctl
        cp ./build/distributions/fritzctl-linux-arm ./build/packages/linux_arm_deb/usr/bin/fritzctl
        go run main.go completion bash > ./build/packages/linux_arm_deb/etc/bash_completion.d/fritzctl
        go run main.go doc man | gzip --force  > ./build/packages/linux_arm_deb/usr/share/man/man1/fritzctl.1.gz
        go run github.com/bpicode/fritzctl/tools/analice generate copyright github.com/bpicode/fritzctl --tests=false --gooses=linux,windows,darwin > ./build/packages/linux_arm_deb/usr/share/doc/fritzctl/copyright
