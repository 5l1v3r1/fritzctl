name: Continuous Integration
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      BUILDFLAGS: -ldflags="-X github.com/bpicode/fritzctl/config.Version=undefined -X github.com/bpicode/fritzctl/config.Revision=${{ github.sha }}"

    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Environment information
      run: |
        echo "UNAME: $(uname -a)"
        echo "PWD: $(pwd)"
        echo "GO: $(go version)"
        echo "BUILDFLAGS: ${BUILDFLAGS}"

    - name: Build
      run: go build "${BUILDFLAGS}" -v

    - name: Test
      run: go test "${BUILDFLAGS}" -run '(Test|Example)' -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Verify dependencies have expected content
      run: go mod verify

    - name: Code quality (revive)
      run: |
        go get -u github.com/mgechev/revive
        revive -formatter friendly -exclude vendor/... ./...
      env:
        GO111MODULE: off

    - name: Code quality (formatting)
      run: (gofmt -s -l -d -e $(find . -type f -name '*.go' -not -path "./vendor/*") | tee /dev/stderr) || exit 1;

    - name: Code quality (vet)
      run: go vet ./...

    - name: Code quality (bounded cyclomatic complexity)
      run: |
        go get -u github.com/fzipp/gocyclo
        gocyclo -over 15 $(find . -type f -name '*.go' -not -path "./vendor/*")
      env:
        GO111MODULE: off

    - name: Code quality (bounded cyclomatic complexity)
      run: |
        go get -u github.com/fzipp/gocyclo
        gocyclo -over 15 $(find . -type f -name '*.go' -not -path "./vendor/*")
      env:
        GO111MODULE: off

    - name: Code quality (golint style mistakes)
      run: |
        go get -u golang.org/x/lint/golint
        golint -set_exit_status $(go list ./...)
      env:
        GO111MODULE: off

    - name: Code quality (detect ineffectual assignments)
      run: |
        go get -u github.com/gordonklaus/ineffassign
        ineffassign .
      env:
        GO111MODULE: off

    - name: Code quality (spelling mistakes)
      run: |
        go get -u github.com/client9/misspell/cmd/misspell
        misspell --error $(find . -type f -not -path "./vendor/*" -not -path "./.git/*")
      env:
        GO111MODULE: off

    - name: Code quality (bugs, suggest code simplifications, point out dead code, and more)
      run: |
        go get -u honnef.co/go/tools/cmd/staticcheck
        staticcheck -checks=all ./...
      env:
        GO111MODULE: off

    - name: Code quality (identify unnecessary type conversions)
      run: |
        go get -u github.com/mdempsky/unconvert
        unconvert -v ./...
      env:
        GO111MODULE: off
